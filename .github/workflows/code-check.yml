name: Perform code analysis and run tests

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: read

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  code-check:
    runs-on: ubuntu-latest
    
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        go-version: ["1.18", "1.22"]

    timeout-minutes: 3

    steps:
      - name: Checkout v4
        uses: actions/checkout@v4

      - name: Go setup v4
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go mod verify
      
      - name: Run staticcheck
        run: go run honnef.co/go/tools/cmd/staticcheck@latest -checks=all,-ST1000,-U1000 ./...
      
      - name: Run govulncheck
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...
    
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          install-mode: binary
          version: latest
          only-new-issues: true
          working-directory: ./
          args: --timeout=30m